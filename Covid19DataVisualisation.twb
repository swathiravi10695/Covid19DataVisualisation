<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <DashboardGridOverlay />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid-19-data' inline='true' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-data-resource-hub/covid-19-case-counts' name='webdata-direct.14dm6c801qzjjp192ecv40grtzpz'>
            <connection APIVersion='' authType='custom' authentication='yes' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;covid-19-data-resource-hub/covid-19-case-counts&quot;,&quot;query&quot;:&quot;SELECT *\nFROM covid_19_cases&quot;,&quot;queryType&quot;:&quot;sql&quot;,&quot;version&quot;:&quot;1.1.0&quot;}' connectionName='covid-19-data-resource-hub/covid-19-case-counts' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='state=87d0bb00-834f-11ea-bd67-b7d5a9dde5bd' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation connection='webdata-direct.14dm6c801qzjjp192ecv40grtzpz' name='Query Results' table='[QueryTable]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>case_type</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[case_type]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>case_type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>difference</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[difference]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>difference</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>combined_key</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[combined_key]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>combined_key</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_region</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[country_region]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>country_region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[province_state]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>province_state</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin2</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[admin2]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>admin2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[population_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>population_count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_total_tested_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_total_tested_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_total_tested_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_hospitalized_cumulative_count</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[people_hospitalized_cumulative_count]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>people_hospitalized_cumulative_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prep_flow_runtime</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[prep_flow_runtime]</local-name>
            <parent-name>[Query Results]</parent-name>
            <remote-alias>prep_flow_runtime</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;datetime&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal' />
      <column caption='Rank' datatype='integer' name='[Calculation_470907678750461956]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK(SUM([cases]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <column caption='Number of Records' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Admin2' datatype='string' name='[admin2]' role='dimension' type='nominal' />
      <column caption='Case Type' datatype='string' name='[case_type]' role='dimension' type='nominal' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Combined Key' datatype='string' name='[combined_key]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Difference' datatype='integer' name='[difference]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='string' name='[fips]' role='dimension' type='nominal' />
      <column caption='Iso2' datatype='string' name='[iso2]' role='dimension' type='nominal' />
      <column caption='Iso3' datatype='string' name='[iso3]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Population Count' datatype='integer' name='[population_count]' role='measure' type='quantitative' />
      <column caption='Prep Flow Runtime' datatype='datetime' name='[prep_flow_runtime]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Province State' datatype='string' name='[province_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[province_state]' derivation='None' name='[none:province_state:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country_region, province_state'>
          <field>[country_region]</field>
          <field>[province_state]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/sylve/Documents/My Tableau Repository/Datasources/extract_1c9n9830eo7d6n1g3zqai1d4ozjv copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/20/2020 09:41:26 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='covid-19-data-resource-hub/covid-19-case-counts' increment-value='%null%' refresh-type='create' rows-inserted='626205' timestamp-start='2020-04-20 21:41:26.246' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>case_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[case_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case_type</remote-alias>
              <ordinal>0</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2103</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>difference</remote-name>
              <remote-type>20</remote-type>
              <local-name>[difference]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>difference</remote-alias>
              <ordinal>2</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>892</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>Query Results</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>combined_key</remote-name>
              <remote-type>129</remote-type>
              <local-name>[combined_key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>combined_key</remote-alias>
              <ordinal>4</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19498</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_region</remote-alias>
              <ordinal>5</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>836</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province_state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province_state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province_state</remote-alias>
              <ordinal>6</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>387</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>admin2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[admin2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>admin2</remote-alias>
              <ordinal>7</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9288</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso2</remote-alias>
              <ordinal>8</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>989</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso3</remote-alias>
              <ordinal>9</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>989</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fips</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fips</remote-alias>
              <ordinal>10</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17397</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>11</ordinal>
              <family>Query Results</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>12</ordinal>
              <family>Query Results</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_count</remote-alias>
              <ordinal>13</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18293</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_total_tested_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_total_tested_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_total_tested_count</remote-alias>
              <ordinal>14</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_hospitalized_cumulative_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_hospitalized_cumulative_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_hospitalized_cumulative_count</remote-alias>
              <ordinal>15</ordinal>
              <family>Query Results</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data_source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[data_source]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data_source</remote-alias>
              <ordinal>16</ordinal>
              <family>Query Results</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prep_flow_runtime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[prep_flow_runtime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prep_flow_runtime</remote-alias>
              <ordinal>17</ordinal>
              <family>Query Results</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.517857' measure-ordering='alphabetic' measure-percentage='0.482143' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:province_state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tibet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xinjiang&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>29</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>30</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>31</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>24</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Daily Case Count for every country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[cases]' derivation='CountD' name='[ctd:cases:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[dy:date:ok]' />
              <groupfilter function='member' level='[dy:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:qk]</rows>
        <cols>([federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk] / [federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok])</cols>
      </table>
      <simple-id uuid='{AC2AC21E-9B46-41B5-A86F-BE309BF6FB9B}' />
    </worksheet>
    <worksheet name='Daily Case Count for every country (Tabulated)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Case Count for Every Country (Tabulated)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[cases]' derivation='CountD' name='[ctd:cases:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[dy:date:ok]' />
              <groupfilter function='member' level='[dy:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</rows>
        <cols>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]</cols>
      </table>
      <simple-id uuid='{9ABA9AF8-D8F9-4A43-B8CB-1086E9BE8637}' />
    </worksheet>
    <worksheet name='Geographical Plot - No of Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Geographical Plot - No of Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[cases]' derivation='CountD' name='[ctd:cases:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_region:nk]' />
              <groupfilter function='member' level='[none:country_region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[Longitude (generated)]' field-type='quantitative' max='16532586.27260581' min='-13099382.73415708' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[Latitude (generated)]' field-type='quantitative' max='13534605.415515997' min='-11007208.972612038' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' />
              <size column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f20006' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#1b1b1b' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B93A1A2-5581-4FEA-9A32-0CCA738DEF39}' />
    </worksheet>
    <worksheet name='Total Confirmed Cases under every Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Case Type' datatype='string' name='[case_type]' role='dimension' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[case_type]' derivation='None' name='[none:case_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk]'>
            <groupfilter function='member' level='[none:case_type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_region:nk]' />
              <groupfilter function='member' level='[none:country_region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</column>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' value='159' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[sum:cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[sum:cases:qk]</rows>
        <cols>([federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk] / [federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk])</cols>
      </table>
      <simple-id uuid='{45F9E6CB-7AEC-4E39-BF17-3EEE4019ADAB}' />
    </worksheet>
    <worksheet name='Total Confirmed Cases under every Country (tabulated)'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Case Type' datatype='string' name='[case_type]' role='dimension' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[case_type]' derivation='None' name='[none:case_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk]'>
            <groupfilter function='member' level='[none:case_type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_region:nk]' />
              <groupfilter function='member' level='[none:country_region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</column>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[sum:cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:case_type:nk] / [federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0123EDCF-532C-4C32-9300-0E480BA8880D}' />
    </worksheet>
    <worksheet name='Total Number of cases for top 5 regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
            <column caption='Rank' datatype='integer' name='[Calculation_470907678750461956]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(SUM([cases]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[province_state]' derivation='None' name='[none:province_state:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Province State' datatype='string' name='[province_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_470907678750461956]' derivation='User' name='[usr:Calculation_470907678750461956:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_470907678750461956]' derivation='User' name='[usr:Calculation_470907678750461956:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:province_state:nk]' ordering-type='Field'>
                <order field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' />
                <order field='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:province_state:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_region:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country_region:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country_region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_470907678750461956:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_470907678750461956:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_470907678750461956:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_470907678750461956:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_470907678750461956:ok:3]' member='5' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:3]</column>
            <column>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:2]' />
              <lod column='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:3]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk] / [federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:province_state:nk])</rows>
        <cols>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[sum:cases:qk]</cols>
      </table>
      <simple-id uuid='{54E8CB8B-0815-4179-903A-F3B9CCED00F1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard/Covid -19 analysis 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid-19 analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='17' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91750' id='7' param='horz' type='layout-flow' w='98400' x='800' y='7250'>
              <zone h='91750' id='5' type='layout-basic' w='82400' x='800' y='7250'>
                <zone h='45875' id='3' name='Geographical Plot - No of Cases' w='82400' x='800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45875' id='18' name='Total Confirmed Cases under every Country' w='82400' x='800' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='91750' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='7250'>
                <zone h='45875' id='8' name='Geographical Plot - No of Cases' pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:ok]' type='size' w='16000' x='83200' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45875' id='19' name='Total Confirmed Cases under every Country' pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' type='color' w='16000' x='83200' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='13' param='vert' type='layout-flow' w='95734' x='2133' y='800'>
                <zone fixed-size='280' h='28800' id='3' is-fixed='true' name='Geographical Plot - No of Cases' w='95734' x='2133' y='800'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='8' name='Geographical Plot - No of Cases' pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:ok]' type='size' w='95734' x='2133' y='29600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{60F49D71-35EA-4C49-8504-636CBC1F6765}' />
    </dashboard>
    <dashboard name='Dashboard/Covid-19 analysis 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='covid-19-data' name='federated.0fkiguc1lclf2s1365o251hr6edx (copy)' />
      </datasources>
      <datasource-dependencies datasource='federated.0fkiguc1lclf2s1365o251hr6edx (copy)'>
        <column aggregation='None' caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='49000' id='9' name='Daily Case Count for every country' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='12' name='Total Number of cases for top 5 regions' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='13' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='98000' id='15' name='Total Number of cases for top 5 regions' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' type='filter' values='cascading' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Daily Case Count for every country' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98000' id='15' mode='checkdropdown' name='Total Number of cases for top 5 regions' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' type='filter' values='cascading' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Total Number of cases for top 5 regions' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D0262B5D-5C59-4A69-B7ED-A1A7A9ADEE0D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Total Confirmed Cases under every Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E39F9005-6793-48AF-BF0E-8F21C832DE4F}' />
    </window>
    <window class='worksheet' name='Total Confirmed Cases under every Country (tabulated)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C907E435-F45A-45BA-9136-7A414F2259C6}' />
    </window>
    <window class='worksheet' name='Geographical Plot - No of Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[ctd:cases:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91FFB3E0-3A88-4A2C-A65E-FF240E6C8797}' />
    </window>
    <window class='worksheet' name='Daily Case Count for every country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:date:qk]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{111DBD57-8642-48EA-9BFC-E9C230B00994}' />
    </window>
    <window class='worksheet' name='Daily Case Count for every country (Tabulated)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[dy:date:ok]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:date:qk]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F03FE9EE-06A0-4232-A717-E89BDE4D1E85}' />
    </window>
    <window class='worksheet' name='Total Number of cases for top 5 regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[none:country_region:nk]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:2]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok:4]</field>
            <field>[federated.0fkiguc1lclf2s1365o251hr6edx (copy)].[usr:Calculation_470907678750461956:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CE90133-2DA4-43C1-8775-93D5ED784F32}' />
    </window>
    <window class='dashboard' name='Dashboard/Covid -19 analysis 1'>
      <viewpoints>
        <viewpoint name='Geographical Plot - No of Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Confirmed Cases under every Country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{B097B2ED-AA92-4BE8-BC9D-C936F6C56C5F}' />
    </window>
    <window class='dashboard' name='Dashboard/Covid-19 analysis 2'>
      <viewpoints>
        <viewpoint name='Daily Case Count for every country' />
        <viewpoint name='Total Number of cases for top 5 regions' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{35B19D55-4F88-4172-BB8A-D76775147037}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily Case Count for every country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily Case Count for every country (Tabulated)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard/Covid -19 analysis 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3gc13W4/c5sr1hg0SsJgCTYK0hKFItkSVSjLEtWs6xYkm25xnacuP1s
      J0qc2I5j2fkcW05sWS5yka1KiRRVSIm9gQQ7CYAgQPRetmD7znx/LGe4i0KCFEAB4r7Pw4fY
      2dk7d2bOufece869V5BlWSZJkqsU8f2uQJIk7ydJBUhyVZNUgCRXNUkFSHJVMyYK0N7cREga
      dKyjYyyKHn0dRnm9psamca5JksmEdvABOezj17/6NZLGiNaWzqceuueyCn5782Yefugh9XNb
      /Sne3L6dqDafTz50OxF/P79++g+IOh2CJYNPP/xRhMu/jyHXS5JkNAxRgG2vv8rKuz7BzDzH
      uSMyb63/G/XtfWQWzeSuG5ewacsBblu7mr7Gk9QO2Ik0VWHNL0D0u/nDs38iKupxBRNHV23p
      +XziE/fz52d3AXB0zxZW3v0p5uSZ2fHqn6hqH2BmtgWAl/78DN2eMKm5Jdy77kY2vvwcvS4f
      fS4P6+5/hAyNmz++uBFkiaXX386isiIAAn1NvHukg1vXLKHp1H76jFPpPL6VM619pOUWc++6
      G6muqqKgsIBtm17mVFMXKRkFPPiRW8fxESeZyAwxgRo84Tjhh976w7hNxXzmM5/FEWjidI9A
      Z2sdErBtzyFmlubR29FJBNj46npuv/8RPv2pT5LlMCWUa7XZElr4otIy3nrlOSoq9lN7toHW
      li71u1vX3U15eTlNJ44wAHT2uLj/44/wxYfXsevgcczOPD6y7lbKly5l9/Yt6u+MqQU0Vh9E
      BnbuP8mMogxOnj7Dh9bext233QBAR0cnAMeqa7nhxlu478617/khJpm8DFEAGxG6/RH1c293
      F7mFhQAU5WfT0+9lSWkGh860MxDVYdWdF+sAerJSzgt+a91JfvWrX3HwZN2QCzsLZ/PJB25D
      ozVQMrWY7Jx0ACLeDn7x9J8IRyX0MoQBvcmMXisiigIycGTHG2zZfwKGMZquKctl/6k6ooYU
      DCI88shjnD5WwU+eeob4PumRRx7l7KlD/PhnvyJ6iQ8tyQeHIQqw9tYbefp/fsbe/RW89sZm
      ps4tZ8/G59i3by8vbz3KvOIMZl9zPW8/8yOK5q9I+G1xupE/vvQ677z9Bl3uALnFs3j88cdZ
      PKuYxrpqDh48QlNzPYeOnYKwhz37jxPw9FDZEmBWrhUAKRJC0BoIDfTT3tU3bKUHvAPY7DY6
      WpsYCIQTvpt33U1s/L8fMe/a64Ewm99+l/TsPLRyJEEBtmx+G0dmDgaiDPLfk1xFCMOlQoQC
      Xk6erCG7sJjsdAdBn5uT1XVMnzUbi0EHwNnaWvJLStEK0NPeQUp2Flqgsa4aSe/AqIPsrCy1
      zMa6arr6vACIejML586kteEM3d4Is2dNRyOcb807Wxvp88ukW4ykZGfR09FOVlY2RPy0u0Jk
      p9moPnkcR84U5LCf7Kws2js61Ov99ne/5ZFHHkUAfO5eqmsbKJ05G5tJT0d7B1nZWQS8/Zys
      qadkxixSLIZxfMRJJjLDKsBk5qU//Yr8eTeydG7x+12VJJOAD5wCJElyKSQjwUmuapIKkOSq
      JqkASa5qkgqQ5KomqQBJrmoSFUCOsGfHdg4cPMDh49XjcsGTuzZS33/+85HKSiIjnw6Bdl7f
      cvDchxB/+/NfOFCxn137DwH9vL5x15CfnK6pGbG43oZj/O7FtwBoOLaHNu/o6v3W6+s5Ua1E
      tGUO7N1JxYED1De1j66AJBOShGS4iq1vU7T4BnLt5wNDp44dot8bYmH5UsKuDk7UNpKSlsnM
      aVOoqz5BrzeA0WInz67BLZs4eaqWRWUFNLV1Y7SnMmdGHjve3Y/BqCV/+hwAzlSfoDXcx4Kl
      12KyWdECHU11NLT3kFMwlbC7g16XF2fOVKamx9dQQmOws6R8KRs2vIbMVADkSID9Bw4j6s0s
      mlPCW2+/hdvjYfqs+dhMifl+oQE3moifmjYXEXcvUgR62puobWwnLTOHaVPyAehqOUt9SxfO
      7Hwc+iin65vIK5kLQNOx3YiZZSwqjlWurbGO5s5eLClOZpUWcnD/PqKCnvlLltBRX017Vy9T
      yuZhjLg4caYZhzOTmaVTxvA1JrlcEnqAVleIXLuBs7WneGXDm/Q1HKFPyGDpohm88+4utu7e
      z7JlS+lvOEFXbwcnGlwsWbyYxjM19LfVs/HdClavupb0rBwMeg07tu8AAvR7YOk113Bg11YA
      CqaWsrDYwb7jTZw+fRqIsv9IFUvLy8nPcpKbm4eo0bJ9+9YhFW5vrufAgQpE/fnkum2btzBr
      UTkzskR2n+hi6pSpLF68eIjwK8xaupJTFdvVz7v3H2bZ0nIaThwhcC4qsrfyGEuXlnP62EFS
      svOZOmUqs2fEgmt1Z7opLj6vmZnZuRi0Iju3byfUe5ZGt56l5YvRywMcr2lj6fLl7N+5lV27
      9zF77gLKSoou62UlGXsSFCA7RU+bO8iU0pnohCh+j5v6utMcPn6GObNnIAoiAmAxaHD19mBO
      zUwobM2NN2PWa3h94wZKZs6lKDcDAI1GAwgI59Id9HoDoigiy0oWjowoagAQBJkNb2xm/oJF
      pDssQyqcnT+VJUvKue3mNeoxf0TGrNdgTknB53YjJOTISRw7dJDG1q64YyILijM4UhszXwQx
      9hgMGkGd2COIsUJ0CENMtKnFadTVdaufN27YwPTZ88nPTkfvLGFJqZ133txAU3c/Z+vqOHiw
      kpKy2ay97XbqTh7m9be3DrmvJO8PCU3k0lUfYvv2nbTa7djTMsmdNY+s1neRZRlZlpk1rYi9
      +/YT1qYzr3QmLVveovKQB7cviNGag6iPCVJOdiYnjx3BG4yJTmtjHXv3wIy5izF4GtBrQdRb
      SLXqCYadgJYpuWnsrzhATsEU0h1WjhyqRNIYQdSTlmo9V0ORjIy0hOqnpdmZO30q27fvRogG
      WXndGjrrBHbvq2DBwsWY9SJzFy5Wf6G32LHqtRRNXcau3bswamFaUQ779legTc/DHtNDSvKz
      2b+/AmtuIUYgzXn+uoXzrqNtxzYO9NpwZuWRnZXOiaNH8IUl/O4eWrv60RstWKyZLJo3Fenc
      82tuqCOMSEqKfazfY5LL5PJTIeQwB/dXEpElZL2V5YvmjnBiP69vPMFtt68Y4fskSd4/krlA
      Sa5qknGAJFc1SQVIclWT4AQPDAyg1Q4/dDhZkWWZaDQ26dHn82EymYhEImg0GqLRKKFQCLPZ
      jE6nw+/3YzQaEQSBaDR6bvRqaHmCIBAOhwkEApdcH51Oh9FofM/3NRpkWcbn8wFgNBqHvZ94
      IpEIAwMD6v0LQmzkTrnnlJSUC/4+EAggCAIajWbSyFFCLbVaLQbDB292lCzLBINBtFotwWAQ
      URQRRRGLxUIgEECj0RAOh9FoNPj9fkRRJBqNYjAYsFiGDsUCGAwGJEkiErlgHHsIWq0WnU6H
      KI5v5ytJEh6PB51Oh9VqVYeg41EEW5IkXC4XoVAIxSVUzpckSRVqvV4/bDlKWQMDA0iShFar
      RRRFBEG4Ysp+uUwONb1MZFkmFAohiiIGgwGtVks4HFZbeQCz2Ywsy2rrGIlEVCG4WCtmNptx
      u92XVB9Zlsdd+OH8fVgslhGFVmnd3W43wWAw4ZhSX0BtLEYqR/md0kMo9ydJE3+29QdaAQC1
      VdJoNDgcDlWow+Gw2iPAeYExm81EIhH1JY5kCgGXJMiKMF2pHtbv92M2mxPqOLh1j0QiBINB
      1USMPyde+I1GI6FQCIgFNXU6HcFgEI1Gg0ajUctTelC9Xq9+N9H5QCuAYv/Hos4yXq8Xo9GI
      LMsEAgEsFgvhcGxViWg0islkwu/3IwgCfr9ftWVHMiHibeTRoNfrr4htrCizTqdLOK6Yf0od
      BgYG8Pv9FyxLMW0g5kPFK0Q0GsXhcCQotVarVXu6C/UYE4UPtAIo9qvJZCIQCBAMBgmFQuh0
      OiRJUu1USZIwGo0YDAZVAeC8CRUKhUZsuS8ljKJcb7xR/JjB14pXasX3uRiD70+SJNWxVr6P
      7zX6+vqQJAmdTofZbMZkSlwgbaIxqRQg3qbXarUXFSatVktKSgoajQZJklRzJxwOqy23xWIh
      EongdrtVP0EZ3VFs2IGBASKRCGazecg1bTYbfr//os6wRqMhFAqN6FSPhvge7ULml8FgwOv1
      qkoOsdY/GAxiMpnw+XyX7LyPRCAQIBAIEA6HkWVZfWbhcBi3260+L1EU0el0w74zSZIIBAKY
      zeYxqdOlMGkUIBqN4nK51Ben1WrRaDQYDIYhDzcajRKJRNBqtWp3bzQaEUWRQCCAJEmq82e3
      21UTSXGQlb/jR0KCwSCyLGO1WtU6CYKg2tAX6/KVul7uvYfDYbxer9qDOZ3OEZVAr9fjcDiG
      mIDKvYylc3qhoWBZlunvPz/5IzPzfPKkJEmqfyWK4vsi/DCJFMDj8aiOGKD+rQimJEmkpqaq
      LZ3i+AqCgE6nw2QyqS9f6UEUofB4PGrLaLVaMRqNhMNhUlJSiEajuN1uVZgGC7qigKOxpS/H
      /g+FQrz68gv0dHez6oabsFgsqmNvtVoxmUwJiqAoiFJHj8dDOBzGZrOpiqD0iIMZrT8z2Jke
      Lb29vQlmqdcbm41kMBiw2+0JJtmVGjFLyAUKBoMTNg7Q3j505lV8Cx2JRNDr9cBQu1V58RaL
      Bb1ejyzLeDwe7HY7Wq0Wt9uNKIoEg0F0Oh06nU5VAGWkJBgMIggCVqt1SG/T29s7on1vMBjU
      Mi9VYMLhML/47IN8ZMtmbJLMn0oKufbHvyMtLQ2DwaAqd2pqaoJJ4/F4EARBPRYvsKIoqubY
      5RDv4I6lP6PRaEhNTVUbCWWgYrx9iEmjAB6Ph4GBgSHCrXwOh8Mj1l2r1RKJRC740hQBVlpB
      URRxOBxqi+VyuRJaL+XFhMNhent7h/VJBgeh6urq2PaXXwCw+sEvUFx84dXrXl3/CvO/+ihp
      dTGnUzaL/P6fHmfdo/+gBqUEQVAj2YpZN/gZxdfLYrHg9/sTeoDBLbrf72fLs/8LpyqQZ5Zz
      48OfxWQyJTi8Y60AEFMCq9Wq9qpXYiRp0phAynDlaEddFGHV6/WYzWa8Xq8a3o9n8GdZljEY
      DGqwTKPREAgEVHvVYDAktLbDOaSCIKDVahOCR4FAgDc/dy8PbT0BwJ+2b+XR9bsuGCl193bg
      CJ4foxd8EpGuJlV4U1JSEARBdUQVE20w8ffo8/kSzhluyHLLs//LLT9/ipSuEK6MCjYB6x7/
      hws+t/eKXq8nHA7jcrnUgQtl4GE8mTTJcKNpcZRzlKE+JWenv79fdQaHQxGC+NQAxbcYGBhI
      GBUSRTHBEY4fV1ewWCyqza1w+vRp5jc1IIRkhJDMvKaGc9NBh9LX18c7b7+J1mTn3XTb+XqW
      mli6ayebPn8vdXV1RCIRotEowWAwIYI9GMXpV+518H3H/y1JEpyqIKUrZiKldIUQTlUknDv4
      t+8VxWlPS0vDbDareUtXYsh40ijA4CFIRdjjjykjC/EttNITQMxBPHbsGK2trer38QIgCAIO
      hwOdTqc6ihaLhZSUFLWlHmw7D5fvMtz4+rRp0zhSUIRsEJANAkcKipg2bdqQ82qqTrHh/g9R
      +JkHKPy3L/NmTjHP3jaPijXpCGcDzDvq4uEtJzj2+x/j9XrV4c6LMdjMGc7hVZ9F2RJcGTF/
      ypWhRy5bMuy5isKMhTIoI3l2u10dwLgSeUSTxgTq6+sb1v5UHpZi4wPqi4lXjuPHjlH/X//E
      vKYWmjUi2+98gHv//luqsCrCL4oiJpNJ7TF8Ph+SJGEymdREtsEtk9FoJBAIIMuymgYwGKPR
      yNpfPs8L53yAWx78wrAveM/TP+LD20+hCUpkAQ9Tjfa3r3HqB1+hPBKbhyxEZPTtLer9Xyrx
      GZ7DCe4NH/8MmwCh6gBy2RJu+PhnLlhefBkjtdpK9q3ijykoLf7gc5WhaGVgY7yYNAowuPVX
      nNZ4mzz+hcYLRjAYpO6//okH365Sj811/Z63iqZx60fuB8BkMiUIrvK3Yl5EIhHsdnuC8MTX
      x2q1qpHWkSguLqb4209e8D7ljlY0wfN1zwyEqe3pwrt4FVJNFWJAosuoRb7hIxcsZzDxCWoX
      cy5NJhO3f/orl1T+hTAajaSkpOD3+9UotSiK2Gy2933QZdIoQGpqKv39/WqLb7PZ1LRiJULc
      1dWl5sDEt3DV1dXMb2pJKC+tOYC/aheSdK+qUMOhlBEKhVSbW6fTDbH7hzs2WuJ7NtOKW+k5
      eABnIIIsCuzIz2HNzNk0PfVviKdio0GGKSZEW/qFihzxGvGfL2QODcdozlNMQsUXCwaDavQ7
      GAxiNBoxmUyj8ukG5zKNB5NGAXQ6HRkZGXi9XjWYE2++GI1GsrOz6erqUrtaiL1op9NJm2bQ
      InhGkeg5IVLiAgaDYUgLrtVq1Tx5JappMBiGnRxyOU6bLMsJSWa+hhosbQHoj4AAuXY3blc/
      kYHB20Ul2vTxSjSSeTOizX8J9nv89Ya7xuDkOIvFog7PhkIhNfI+2uuMN5NGASDmgOr1+hGD
      SlqtFrvdTm9vb8KLyc3NZecd9zHX9SxpzQFko8iGhbksuvX8vsKyLNPV1YXJZEoYwVF6k3hH
      T4k0v5copSzLPPfrnxF6/TmCqQ6EunoQBAqiAxj7z5l0MixsdvH9n36fT+l9UGKCNC0bnTYW
      L1ySELeIz7kZ7NjHf6ccV/4fbcs/uO6Dv5dlmZSUlGFNmlAopCYZjtXI0VgxaQJhik1/MaGT
      ZRmXy5WQsaj8fvOGlwhU7yFqS2PB2o9RXFyc8HIVgdBqtZhMJsxmM729vQn58nB+nN9ut192
      N/3ai89R9o+fJbvBD1oB8g1g0UCKFtqD0BkGbxTPVBONaQZmd/ghSw/VPmTgmftv5YF//4U6
      bBtvximCpgyNxvtDSqam4kMNN7w5GJ1Od8FhVog1PvGR3Pjn6vf7cblcmEymi06rvNJMmh7g
      UlpbJWqpjMwownHrR+5HFB9UBUIRHGWmGMReXDQaVecPD54sEu8T9PX1kZGRcVndtau2guym
      c/lDERlSteCJwm5X7Fi+AXL0WB06ZncFYkoiAN4oAlDQUMlb65/nlo/cr46ZD9fiKxmgkiTR
      0NBATk6OqhzKtM7hgmHKs1Cmh8ajzP1VEhIhNgehu7sbvV4/pGFQ4jI2m42JxqSJA4wWJfpr
      sVgSWrl421UZhVCG25TWLd40iEaj9Pf3J4wqKa1pfELd5ZJSWk574bk8F60AqTqojUuoaw5C
      tgGhNwxGEQwicnOQhtVpsNLBzXvaWfaD7/Lm+ucT0jiCwSA+n4+BgQF10orH4+GPn3sA/6N3
      8Lcv/506F8Dn8yUovpLSrMyBUHKsBve+ytzxwWag8pwHp1prNJpR2/5XmknTA1wKSpKYwWBQ
      c2MGB84GO49KiyiKoirsg4NeSoxAWdmhv7//shO27rj7fp7r6cDzyu+5vacZe38EzCL4zpkr
      +QbY64LwObNjsQ05R0/BUTf0RqDURG6tH2/NHoLBu9Dr9apgxycFGgwGNrz6Co8cPoThbIA5
      /kOsf2cL6z58l7pChs/nU59XOBxGp9PR0txMOBymsKhIFXQlHUQpX6fTEQqF1Ki7MgI3ODah
      NDYTkYmnkmOEIAhqtqfiOCtdsRLQUl66wWBAr9erGaWKCaWg9A5+v181KSAmAIqZdTn1e/Dx
      L/PYq/t5duVdyF0hyNBDgSH2L1N/XvgBPBHExgDiOQeZgETLdAvm0mVqarei1PGjY4IgkF84
      hRprTGirrQbyC4vU+1JWv1DQ6/W0NDfT8MX7af2Hj9PW2qrOltPpdESjUXUoWln9QUkdUXqG
      wYGtKzWiczl8IHsABVEUVcEePDIiSRIV+/bQuudVAHKWr6N82TUEAgGMRqOqKEogTPEXlCVE
      zGYzNpvtsjMWw+EwG579Na5312MY6AWzJibwRhFag6ATYv8UJdCKkK4FBGgKsDvTSs8Xvss9
      9z3MoQP7Ob33HUqXXc/Sa2JrsCr5T16vl4B/gOYvPsHx5sOkzVrNzPx8ZFlW07+1Wq1q7uh0
      OnVlbDivRIpJpES6leeppFbrdDo1iS1+tGciCz9MolGgy0GWZTo7OxO6ZOWFbH17E0U//Dpz
      TsWWNTk+007jN3/EDbfcoY79S5KkdvEajYa0tNgK0ZeT2z+Yl595itlP/D9ymvxgEGChDfae
      W2JlmgkkYqNCYQkMInijMYU45ePYrZm8MmBmdmoanmU3kvvOX1nV1cPRNBNnsqdT/MlvM3Pm
      THw+H1u+/DArT1WxY+ZMrv/p73j9599n2uaN1Nx4O/f807+prbXi8CpmVEPDWbRaLVOmTCUc
      DqsBwPjn6PP5CAQC2O127HY7FosFr9dLJBJRM1UnOh/oHgBGnr3U/9enuP3k+TV95px0c+Rv
      v0S4dZ3azcP5ZUwGT4R5r7jeXR8TfoCgDD1h9TuPU491nwthpgU534iwrQ9CMhQaQAPpgQjf
      2d2AEDlL57EqrBYRwzEv5doByvM8/Dnyb8z4yZ84fOggK09VUVDvYyWn2PT6RqZt3siqU25k
      NuJ+/J/UqKzioB6pPEDTrleQZZnspbeTm5sHJEZlZVnm9T/8H9pNf4sFJe96GBGJ0OkjaIrn
      ctsjn58Uwg9XgQIojlo8kiSh6eoacq7mXG+hjBQpZo/NZhvzvHQhM5eoQTyf9yMDxUYOZdv4
      c0oRn1pTjz4q47bqmXduBBSNgGtpCj29UXIkGfQCmU1+/POsCWU7+xp548n/h2PpWnbMnMlK
      TvFGUSGrrlvJttO3IPMGZ25axzU5OQmC+s4bG8j7j39kpdorbmTHt/6LNTffpp5jMBjY/vor
      LPvFT8g/G4u19HT8CGNnCEtviIG0jbxQfZxHf/7spFge8QPrBAOq8A43vu1fthrZGjcH1arB
      v2y1OsypjH0LgjAu0/Ku+fTXeXXVTHpLzEhlZuTeMM2SyJYFN3Nv21mmb+1hSpOP+a+2w2wr
      FBuJRuFtUw6nTAYoMMJ8K/JSe8wxLjYSLLfjz9Zz8/Y27nvqb6T+8Gt0LFrDu2kW5na0su1P
      /8cdX/oOmb/byIPf/uEQR7/nLz9nzkl3TBnlWK/Y+9enEp5bJBKhe9cm8prOBxqdgQiW7hBI
      YOkOMXvbZqqqqpgMTHwVfY8o0xLjp1MKgsCNn/0Gv+7pZMmhCpChYuESbv/cN9XfKc7feOWk
      Ty0pZfO0OfSfbUCngY3zMjmWMx9n0EWx1xdr8WUgCrtlO+3XTkPIyiNzzUewfP0xaAhAQwBh
      iQ3DmZgppQ/J0BlCCMXus7yql2O5f+bhw10IUZB5ha57PkFpaak6aqPMkZYkCbGzc0g9NZ2d
      CcPIsiyjzcghatKg9UaHnD/Z+MArgJKqDKjZpLIsY7fb+diPn6G2thZBEHiopCThN4Bq+oyH
      PVt58ADXvrWR4trYyggry+Das9vI7Q0ipetxl5qpdpipWb6EeX/3JdZcvxaPx8OWl/+CLs8A
      fmPMKe497zsMV8tmr0A0z4i2JYCQElvzSEnu02q1CVHewPI1yCf/hnBOsGWrBt+y1er4v9KA
      LPjII2zcuZUPnTgDwL5MG8s9EpaeEANOPSdW38ijZWVj/szGgw+8AigoKbnKIlaRSISOjg5S
      U1PJyMhQnV0lwhkIBNSVF8aNuKJzIlHEs+ecYreftxdl4Pz3Z7g2K4t9zzyJKxih/sXfcefm
      bdh9kVjM4GwA0nREcw2I3giCUxfLJfJFkT1RKnJT0OlMaDwRyDey7EAff3zuf3B89rvUn6mh
      p7MTYdvfENbch9HViphbzM9uXsbKU8diveKicu74/LfUOkajUdra2mhqqGfWf/6G/ScPIRPb
      dXPbmy8RrDmMftoC7vvE5yaF/Q9XkQIouStGo5GBgQE2/PYXZL/wO2Rg30Of4bGvP5Eg7Dqd
      jj/8+N/gZAXLv/kks2bNGtP6pKY6eG3lh4AtAHjsOhZwPhVCo9VTUlrKrtf+yrq/vMzPjh/h
      Y41NpLTHVrfD60eaZqYtDP4MPSWhKHgiajpFdJGNPVNnUBrwIPRFoC+CAAjVR2n/7D0s7nXT
      nmWgtD9ERdd/seJoPz0pOt5+7DP4P/0NzGYza1NT1VQJSZI4WlmB+3tfZVFXD4ez0in6ye9Y
      sjwWd5g+/bz5OJnQPPHEE08oH+Lz6D+IKAGf48ePU/KDr7PkpJuSzgCG5sOcXbyKgoIC9dye
      nh76vvoYt+2sYXvrTg70R6mvr2Nqcel7fkb1dXVUPXIDrmmzsfz9P9O95lbqbE4cDcexSDLN
      uSZqH3iEWUtXYMvM5e1AN8Lsa5h2ZD+OvnOrYwjw0vXz2DN9DjftOIW2LQhOHXTHvhfNGgy9
      XVSWf4iSjmqs7gjtRSZ6zSI3VXRh6Q+T2RLgLwV2runwYW0PYXFFOGPrJjx1Pn2drXi+8Sl6
      X3qWGmc2U0tnUPHU97hrUyVWf5TiRhfbtH0suP2+9/Qs3m8+uNI+AkajkY6OdmaFz9u+heEo
      W1ta1NQAjUZDbU01BXoQsvXc/soJImf/hUBXmP9943m+9Ku/vafErhSHg4MLb6a1J8DK9HRy
      DUY6Tx7gD2vXMSM/C+e0+axaWI7P58PhSOXD3/4x4XCY104f4sMD2zD7oxwqTCHzga+Q5h/A
      8+Y7OF0R5PYQrmUpOMISDEQpjUapyUij6sf/y97aCsIpU3D+6keq5SXIkCuJ7MjNYF1fK6FM
      PXftbWBT47cJZNr5cIsHesI89/yvMN/zIIR9CEVGCEgIRg0Rv+c9vo33n0mpAJebfgAxU+iG
      Gz7Ei4UF3N9+BgR4IT+PFWVl/PG//wVXRxOW9HxSixcwPRCFhgCiVkDfGUTfGGTRzq384OE7
      SE3P5PEnnx51b9DV1UVLcxNz5s6jcvc2zBYzdx56g/1/1iH5gtzz11c5nmMl+kL8xOsAACAA
      SURBVJPfY9Bp2fnZe0EQmPbP/40vECQ7O5sbv/NjNi18kd1vbuDeL36DeQsWsW3bNl67+24K
      9ryDKz2d7hW3MeudP3BdZTs2QNz2Ouu+/QPgASRJ4pkTFfjrX8TUH8Hv0NJxzSpWfv6bvLXl
      FfoDEXJfeIZVQhDL2TZIjeUYBadMx+/3k3noGNSdXwvUaT5MW1sbOTk5l/UuJgKTUgHeq2Oa
      lpbGzb/dwPqXn0GWZJbdcDfbfvpdHj6yA6E1iOzQ8svFK3BNKyLL0IDLpiNjd2xKYq1ey2Pe
      o9R3yGx69WXW3X3vRa8XCAR45fF7Kas6wQ9uuZtbNrzIJ3oD/K4smxUffpSDT/8npjQtpcYo
      Gyr3YpKD3FlZC8Bv1v+J0h2b2FEyg7t/8iyBmmN8v/YkL2x8jqYTe1n3+//jzU9/idLPbOTd
      H3wNqf4UZ1ffS1nzbwCQ19yh1kMURe76l5/wsiMNseYwmtnl3PuFb+J0Opk9dx4AzxzdhfUv
      O8GpBRn+cs1U7v/ez2ltbSVrUJpzdjRCZ2dnUgEmI0VFRTz8lX9VP1cYdLEhRQEEu5ZZrcc4
      mDONH87JY8ENdzCQ8pvYqM2tH2f/hh9zQ0U3m773FfpvuAmHw3HR6ykhJ1drPUXRCKZSEysF
      H3vXP0dubQ1CrZ80/DgNf+ToopVULknlTMDGorX3cMrdj3n67Fg5soxMbDw+Z/oi/lyYT9Or
      L+GtrmIAAUmj5fHv/idvlq8B4JFbbk2oh9Pp5J5/+Gd1c4vBM9rURLiQDJl6TH1etFots2bN
      4tel05l9phIhLCPrBCpLpvP4GA8OXGk+0Mlwl0JTUxP7/vMbzDy8lcJdPbGDxSZ2pZiJPPEL
      cvOLyMrK4t3//mfWvvsqurDEX+eU88nfbxiVGaSYQBkZmez58Vcoq9xJ0Z5+GkotuHUa5p5y
      Q4GBnjwTujM+bJ1BXrx2Cot//jxZWVnU19fjcDjQaDRs2PAa5eVLaTqyH+GZn3GTu59eUeT0
      T//I6tWrLxq78Hq9vP3MUwxs3ULWHXex5uFPqYqwdfObRL75KMua3BCW+XNZJg++cQS73c6Z
      M2fY98t/Z/qAiyqTjeWf/y6lpaVj8vzfL67aHmAwBQUFFPz8z/zy8w/y0JH1MUfRH+VawUfn
      Vx+j2WjguelT+c7bRxCcOs6UWHBrdBw+fJglS5ZctPyMjAwyMjIAuOenz/P0Fx4gb2ALhQII
      h1wwzwreKA6LgOiJIEhwTbif9b96kqX3PELbNz9O07Vr+dhX/5WMt57l9df/SF5mBh8/0k7z
      DCuv3PkQD8yYMWRBsHgkSWLLay9y/NhRbvjtLyiuG6DuaAX7p89hxXUrAfC4+ynt8cfmJAOr
      2vrZvOlV/I21BKoPU/6F7zJ3wSJmeL1XZNmS8eaqGgYdDVOWruZP9OEI1JMCCD1hrC1BcrsC
      DFiCSGYN3ToNBX0hljc3sHfrKzhvu/+S5rsKgoBz1mLeeONVnD4fu50mNBYRlyywxVHAwWuX
      ErX2MWNXL6V9deyYMgt3io2UkgXkF07hUFsbnjPHcRlT0Ob4eEVrZuaZWppMFhZdu2rEEaoj
      hw8hfe5Bco5WUGc2UBQIc7gggxmf/HvVjNvz7E9YvqFS/Y29P8zu4FHWvPUuS949xRuuGhbc
      9ZA6Z2KyZH2OxNUt7cOQkZHB5574H/7n5p18sqMe4hPG9BZOfPE7mEwmdm1+EXNfK15n/qhW
      WxvMlKnF3PiHN6iqqmL1woVUVVUhyzJ3lJWx/Rf/TmNbCouKvdiMAinrn8VVNpO0Z55kY+UO
      TP3NfK2xC6GnF321j1nzbBhaAmw8ffSCUw/z8gt4uSzmS0z/4rfZfKKCWStvYcqUKeo5kiMb
      2SwiKFMzrRoeOtOFGIpCnoGVxw/z7qbXuOG2O4dML52MJH2AYWhoaOD0bUtYdtINeQbQChxN
      MXH6ka9w030PD/vCTSYTRqMxYQ/iy6Guro6X7ltNj93IN3p66RcEXpGtXO91U1w3gK/MgrEr
      hCtDT7uoYeZJN4dnOqj6xGdZ++BjFBYWMTAwwFtvvcXNN988ZE8yZaXrkZL8GhoaOPDYjdx8
      uiN2wKlDrvMjuKMgQsSq5bVvfomPfe176n36/X61vCu1qvNYkTSBhsFqtbLlzVeYU9+B4IrQ
      7tSz/ZP/yC0f/diQFlaWZVpaWqis2Ec4ElX30FUmz1yqMKSmppJ9412sfOAzvCzLnF66lvw7
      H6Dn4HbyB/wcyLLgmGLAZdHSK8Gr86di/8K3uf+zX8HhSAXgL0/9gFU/+n9sECQWLF+TUH78
      vmnD4XA4aE3L58yRHVgiYSoMZnSChL0/DDI055rw3/co02fNUe9fEAQGBgZwuVy88Kv/j+6T
      ByleuBzggsvSTwSSCjAMoihiW7ySN8It7LdFecGRSknpdNLypgxpUfdseZPAP3+eBRtfof6d
      9dSn55E3pRifz6euc3+ppKamYrVamVt+HTn5hWRmZeGatYiK0nxSH/p7djmn49+3l5X1buof
      /jse+Ow/JgiZNxBlT9Mppq/7OwqnXHgXmuGYOr0M400foXbJSooe/Xv2Wy00ehuoK0ih5dHP
      cftDj/H01z7NwTdfZfHaO9XFBQRB4IX/+CZi1VFK7rhfXYhgIs8PTppAF8DtdvPcx27hw3uP
      IgAvLZvLyh89TWpqrKX1+Xzs+cxH+PA7NQjE8nPWXz+dFb9ej9Vqxel0vqflQGRZpqGhga2v
      Ps+MJSvILyhQd2PftuUtWqoOUrb8Jtbecit2u31sbnqYOsD55elTUlLo7u7m3bvKAYGbNlSS
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard/Covid-19 analysis 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Geographical Plot - No of Cases' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Confirmed Cases under every Country' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Confirmed Cases under every Country (tabulated)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Number of cases for top 5 regions' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
